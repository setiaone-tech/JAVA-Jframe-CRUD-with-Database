/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vaksinasi;

/**
 *
 * @author 88komputer
 */
import javax.swing.table.*;
import java.sql.*;
import javax.swing.*;
import java.util.*;
import java.text.SimpleDateFormat;

public class FormKartuVaksin extends javax.swing.JFrame {

    private String nomkartu, nama, ni, nam, jeniskel, kelurah, dus, jenvaksin, tanggal;
    private int key;   
    
    /** Creates new form FormKartuVaksin */
    public FormKartuVaksin() {
        initComponents();
        
        tampil_data();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        dcTanggalVaksin = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        tfJenisVaksin = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        tfKelurahan = new javax.swing.JTextField();
        tfDusun = new javax.swing.JTextField();
        rbLaki = new javax.swing.JRadioButton();
        rbPerempuan = new javax.swing.JRadioButton();
        cbNIK = new javax.swing.JComboBox<>();
        tfNomerKartu = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVaksin = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        tfPencarian = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Kartu Vaksin"));

        jLabel1.setText("Nomer Kartu");

        jLabel2.setText("NIK");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Jadwal Vaksin"));

        jLabel7.setText("Tanggal Vaksin");

        jLabel8.setText("Jenis Vaksin");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel8)
                    .add(jLabel7)
                    .add(dcTanggalVaksin, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .add(tfJenisVaksin))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dcTanggalVaksin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(tfJenisVaksin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Diri"));

        jLabel3.setText("Nama");

        jLabel4.setText("Jenis Kelamin");

        jLabel5.setText("Kelurahan");

        jLabel6.setText("Dusun");

        rbLaki.setText("Laki-Laki");

        rbPerempuan.setText("Perempuan");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(jLabel5)
                    .add(jLabel6))
                .add(23, 23, 23)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(tfNama)
                        .add(tfKelurahan)
                        .add(tfDusun, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(rbLaki)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rbPerempuan)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(tfNama, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(rbLaki)
                    .add(rbPerempuan))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(tfKelurahan, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(tfDusun, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        cbNIK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Generate");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cek");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel1))
                .add(24, 24, 24)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(cbNIK, 0, 135, Short.MAX_VALUE)
                        .add(tfNomerKartu))
                    .add(jButton1)
                    .add(jButton2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(tfNomerKartu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .add(30, 30, 30)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel2)
                    .add(cbNIK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jButton2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tbVaksin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "No. Kartu", "NIK", "Nama", "Jenis Kelamin", "Kelurahan", "Dusun", "Jenis Vaksin", "Tanggal Vaksinasi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbVaksin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbVaksinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbVaksin);
        if (tbVaksin.getColumnModel().getColumnCount() > 0) {
            tbVaksin.getColumnModel().getColumn(0).setResizable(false);
            tbVaksin.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbVaksin.getColumnModel().getColumn(1).setResizable(false);
            tbVaksin.getColumnModel().getColumn(2).setResizable(false);
            tbVaksin.getColumnModel().getColumn(3).setResizable(false);
            tbVaksin.getColumnModel().getColumn(4).setResizable(false);
            tbVaksin.getColumnModel().getColumn(5).setResizable(false);
            tbVaksin.getColumnModel().getColumn(6).setResizable(false);
            tbVaksin.getColumnModel().getColumn(7).setResizable(false);
            tbVaksin.getColumnModel().getColumn(8).setResizable(false);
        }

        jButton3.setText("Tambah");
        jButton3.setPreferredSize(new java.awt.Dimension(79, 23));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Edit");
        jButton4.setPreferredSize(new java.awt.Dimension(79, 23));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("Hapus");
        jButton5.setPreferredSize(new java.awt.Dimension(79, 23));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("Bersihkan");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("X");
        jButton7.setPreferredSize(new java.awt.Dimension(39, 39));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jLabel9.setText("PROGRAM VAKSINASI @2021. All Right Reserved");

        jButton8.setText("Cari");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(191, 191, 191)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton6)
                .add(182, 182, 182)
                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jLabel9)
                .add(257, 257, 257)
                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(tfPencarian, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 199, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton6)
                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 11, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton8)
                    .add(tfPencarian, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        cek();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        rand();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        tambah();
        bersihkan_form();
        tampil_data();
    }//GEN-LAST:event_jButton3MouseClicked

    private void tbVaksinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbVaksinMouseClicked
        // TODO add your handling code here:
        try{
            int urutan = tbVaksin.rowAtPoint(evt.getPoint());

            key = Integer.parseInt(tbVaksin.getValueAt(urutan, 0).toString());

            nomkartu = tbVaksin.getValueAt(urutan, 1).toString();
            tfNomerKartu.setText(nomkartu);

            ni = tbVaksin.getValueAt(urutan, 2).toString();
            cbNIK.setSelectedItem(ni);

            nam = tbVaksin.getValueAt(urutan, 3).toString();
            tfNama.setText(nam);

            jeniskel = tbVaksin.getValueAt(urutan, 4).toString();
            switch(jeniskel){
                case "Perempuan":
                    rbPerempuan.setSelected(true);
                    rbLaki.setSelected(false);
                    break;
                case "Laki-Laki":
                    rbLaki.setSelected(true);
                    rbPerempuan.setSelected(false);
                    break;
            }

            kelurah = tbVaksin.getValueAt(urutan, 5).toString();
            tfKelurahan.setText(kelurah);

            dus = tbVaksin.getValueAt(urutan, 6).toString();
            tfDusun.setText(dus);
            
            jenvaksin = tbVaksin.getValueAt(urutan, 7).toString();
            tfJenisVaksin.setText(jenvaksin);

            tanggal = tbVaksin.getValueAt(urutan, 8).toString();
            java.util.Date dat = new SimpleDateFormat("yyyy-MM-dd").parse(tanggal);
            dcTanggalVaksin.setDate(dat);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tbVaksinMouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        bersihkan_form();
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        del();
        bersihkan_form();
        tampil_data();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        edit();
        bersihkan_form();
        tampil_data();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        keluar();
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:
        cari_data();
        bersihkan_form();
    }//GEN-LAST:event_jButton8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKartuVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKartuVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKartuVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKartuVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKartuVaksin().setVisible(true);
            }
        });
    }
    
    public void cek(){
        try{
            Connection conn = (Connection)koneksi.getKoneksi();
            Statement s = conn.createStatement();

            String nik = cbNIK.getSelectedItem().toString();

            String sql = "SELECT nama,jenis_kelamin,tgl_vaksinasi,nama_vaksin,kelurahan,dusun FROM penerima INNER JOIN jadwal on penerima.NIK = jadwal.NIK INNER JOIN jenis_vaksin on jadwal.id_vaksin = jenis_vaksin.id_vaksin INNER JOIN pos_vaksinasi on jadwal.id_pos = pos_vaksinasi.id_pos WHERE penerima.NIK = '"+nik+"'";
            ResultSet r = s.executeQuery(sql);

            while(r.next()){
                tfJenisVaksin.setText(r.getString("nama_vaksin"));
                dcTanggalVaksin.setDate(r.getDate("tgl_vaksinasi"));
                tfNama.setText(r.getString("nama"));
                switch(r.getInt("jenis_kelamin")){
                    case 1:
                        rbPerempuan.setSelected(true);
                        rbLaki.setSelected(false);
                        break;
                    case 0:
                        rbLaki.setSelected(true);
                        rbPerempuan.setSelected(false);
                        break;
                }
                tfKelurahan.setText(r.getString("kelurahan"));
                tfDusun.setText(r.getString("dusun"));
            }
            r.close();
            s.close();
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
    }
    
    public void tampil_data() {
        try{
            DefaultTableModel model = (DefaultTableModel) tbVaksin.getModel();
            model.setRowCount(0);
            
            Connection conn = (Connection)koneksi.getKoneksi();
            Statement s = conn.createStatement();
            
            String sql = "SELECT * FROM kartu_vaksin";
            ResultSet r = s.executeQuery(sql);
            
            int no = 0;
            
            while(r.next()){
                no++;
                
                Object[] obj = new Object[9];
                obj[0] = no;
                obj[1] = r.getInt("no_kartu");
                obj[2] = r.getString("NIK");
                obj[3] = r.getString("nama");
                switch(r.getInt("jenis_kelamin")){
                    case 1:
                        obj[4] = "Perempuan";
                        break;
                    case 0:
                        obj[4] = "Laki-Laki";
                        break;
                }
                obj[5] = r.getString("kelurahan");
                obj[6] = r.getString("dusun");
                obj[7] = r.getString("jenis_vaksin");
                obj[8] = r.getString("tgl_vaksin");
                
                model.addRow(obj);
            }
            tbVaksin.setModel(model);
            
            String sql2 = "SELECT * FROM penerima ORDER BY NIK ASC";
            r = s.executeQuery(sql2);
            cbNIK.removeAllItems();
            
            int num = 0;
            
            while(r.next()){
                cbNIK.addItem(r.getString("NIK"));
            }
            
            r.close();
            s.close();
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void rand(){
        Random random = new Random();
        int nomer = random.nextInt(999999999 - 100000000) + 1000000000;
        tfNomerKartu.setText(String.valueOf(nomer));
    }
    
    public void tambah(){
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        int jk;
        int nomerkartu = Integer.parseInt(tfNomerKartu.getText());
        String nik = cbNIK.getSelectedItem().toString();
        String tgl = sfd.format(dcTanggalVaksin.getDate());
        String namavaksin = tfJenisVaksin.getText();
        String nama = tfNama.getText();
        if(rbPerempuan.isSelected() == true){
            jk = 1;
        }else{
            jk = 0;
        }
        String kelurahan = tfKelurahan.getText();
        String dusun = tfDusun.getText();
        String jenisvaksin = tfJenisVaksin.getText();
        
        try{
            String sql = "INSERT INTO kartu_vaksin (no_kartu, NIK, nama, jenis_kelamin, kelurahan, dusun, jenis_vaksin, tgl_vaksin) VALUES (?,?,?,?,?,?,?,?)";

            Connection conn = (Connection)koneksi.getKoneksi();
            
            PreparedStatement s = conn.prepareStatement(sql);
            s.setInt(1, nomerkartu);
            s.setString(2, nik);
            s.setString(3, nama);
            s.setInt(4, jk);
            s.setString(5, kelurahan);
            s.setString(6, dusun);
            s.setString(7, jenisvaksin);
            s.setString(8, tgl);
            
            s.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Ditambah.");
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
    }
    
    public void bersihkan_form(){
        key = 0;
        tfNomerKartu.setText(null);
        cbNIK.setSelectedItem(this);
        dcTanggalVaksin.setDate(null);
        tfJenisVaksin.setText(null);
        tfNama.setText(null);
        rbPerempuan.setSelected(false);
        rbLaki.setSelected(false);
        tfKelurahan.setText(null);
        tfDusun.setText(null);
        tfPencarian.setText(null);
    }
    
    public void del(){
        try{
            Connection conn = (Connection)koneksi.getKoneksi();
            Statement s = conn.createStatement();
            
            String sql = "SELECT * FROM kartu_vaksin";
            ResultSet r = s.executeQuery(sql);
            
            int no = 0;
            
            while(r.next()){
                no++;
                
                if(no == key){
                    int titik = r.getInt("no_kartu");
                    String sql2 = "DELETE FROM kartu_vaksin WHERE no_kartu=?";

                    PreparedStatement t = conn.prepareStatement(sql2);
                    t.setInt(1, titik);

                    t.execute();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus.");
                }
            }
            r.close();
            s.close();
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void edit(){
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        int jk;
        int nomerkartu = Integer.parseInt(tfNomerKartu.getText());
        String nik = cbNIK.getSelectedItem().toString();
        String tgl = sfd.format(dcTanggalVaksin.getDate());
        String namavaksin = tfJenisVaksin.getText();
        String nama = tfNama.getText();
        if(rbPerempuan.isSelected() == true){
            jk = 1;
        }else{
            jk = 0;
        }
        String kelurahan = tfKelurahan.getText();
        String dusun = tfDusun.getText();
        String jenisvaksin = tfJenisVaksin.getText();
        
        try{
            Connection conn = (Connection)koneksi.getKoneksi();
            Statement s = conn.createStatement();
            
            String sql = "SELECT * FROM kartu_vaksin";
            ResultSet r = s.executeQuery(sql);
            
            int no = 0;
            
            while(r.next()){
                no++;
                
                if(no == key){
                    int titik = r.getInt("no_kartu");
                    String sql2 = "UPDATE kartu_vaksin SET no_kartu=?, NIK=?, nama=?, jenis_kelamin=?, kelurahan=?, dusun=?, jenis_vaksin=?, tgl_vaksin=? WHERE no_kartu=?";

                    PreparedStatement t = conn.prepareStatement(sql2);
                    t.setInt(1, nomerkartu);
                    t.setString(2, nik);
                    t.setString(3, nama);
                    t.setInt(4, jk);
                    t.setString(5, kelurahan);
                    t.setString(6, dusun);
                    t.setString(7, jenisvaksin);
                    t.setString(8, tgl);
                    t.setInt(9, titik);

                    t.execute();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Diperbarui.");
                }
            }
            r.close();
            s.close();
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void keluar(){
        System.exit(0);
    }
    
    public void cari_data() {
        String cari = tfPencarian.getText();
        try{
            DefaultTableModel model = (DefaultTableModel) tbVaksin.getModel();
            model.setRowCount(0);
            
            Connection conn = (Connection)koneksi.getKoneksi();
            Statement s = conn.createStatement();
            
            String sql = "SELECT * FROM kartu_vaksin WHERE no_kartu='"+cari+"' OR NIK='"+cari+"' OR nama='"+cari+"'";
            ResultSet r = s.executeQuery(sql);
            
            int no = 0;
            
            while(r.next()){
                no++;
                
                Object[] obj = new Object[9];
                obj[0] = no;
                obj[1] = r.getInt("no_kartu");
                obj[2] = r.getString("NIK");
                obj[3] = r.getString("nama");
                switch(r.getInt("jenis_kelamin")){
                    case 1:
                        obj[4] = "Perempuan";
                        break;
                    case 0:
                        obj[4] = "Laki-Laki";
                        break;
                }
                obj[5] = r.getString("kelurahan");
                obj[6] = r.getString("dusun");
                obj[7] = r.getString("jenis_vaksin");
                obj[8] = r.getString("tgl_vaksin");
                
                model.addRow(obj);
            }
            tbVaksin.setModel(model);
            
            r.close();
            s.close();
            if(no == 0){
                tampil_data();
                JOptionPane.showMessageDialog(null, "Tidak ada data yang ditemukan!");
            }
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbNIK;
    private com.toedter.calendar.JDateChooser dcTanggalVaksin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbLaki;
    private javax.swing.JRadioButton rbPerempuan;
    private javax.swing.JTable tbVaksin;
    private javax.swing.JTextField tfDusun;
    private javax.swing.JTextField tfJenisVaksin;
    private javax.swing.JTextField tfKelurahan;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNomerKartu;
    private javax.swing.JTextField tfPencarian;
    // End of variables declaration//GEN-END:variables

}
